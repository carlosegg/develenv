<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>&lt;a href=&quot;http://www.softwaresano.com/&quot; title=&quot;SoftwareSano&quot; class=&quot;poweredBy&quot;&gt;&#xd;
   &lt;img id=&quot;jobJenkins&quot; class=&quot;poweredBy&quot;  alt=&quot;softwaresano&quot; src=&quot;http://pimpam.googlecode.com/files/jobJenkins.png&quot;/&gt;&#xd;
   &lt;script type=&quot;text/javascript&quot; src=&quot;http://www.softwaresano.com/widgets/jobBuiltyBy.php&quot;&gt;&lt;/script&gt;&#xd;
   &lt;script type=&quot;text/javascript&quot; src=&quot;/widgets/jobBuiltyBy.php&quot;&gt;&lt;/script&gt;&#xd;
&lt;/a&gt;&#xd;
&lt;br/&gt;&#xd;
Prueba que todos los ejemplos que se han desplegado sobre develenv se hayan ejecutado corectamente. &#xd;
&lt;br /&gt;&#xd;
Este job será disparado cada vez que acabe un build de alguno de los ejemplos de develenv&#xd;
&lt;br /&gt;&#xd;
También se comprobará que todas las Urls de develenv están funcionando correctamente. Para ello invocará al job &lt;a href=&quot;/jenkins/job/JMeterExample&quot;&gt;JMeterExample&lt;/a&gt;&#xd;
&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.googlecode.GoogleCodeProjectProperty/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
wget http://localhost/jenkins/view/develenv%20samples/api/json -O json
RESULT=`cat json|sed s:&quot;/job/test-develenv/\&quot;,\&quot;color\&quot;\:\&quot;red\&quot;&quot;:&quot;&quot;:g|grep &quot;\&quot;,\&quot;color\&quot;:\&quot;red\&quot;}&quot;`
if [ &quot;$RESULT&quot; != &quot;&quot; ]; then
   exit 1
fi
exit 0
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.chucknorris.CordellWalkerRecorder>
      <factGenerator/>
    </hudson.plugins.chucknorris.CordellWalkerRecorder>
   <hudson.plugins.logparser.LogParserPublisher>
      <unstableOnWarning>false</unstableOnWarning>
      <failBuildOnError>false</failBuildOnError>
      <parsingRulesPath>/home/develenv/app/jenkins/consoleParser.conf</parsingRulesPath>
   </hudson.plugins.logparser.LogParserPublisher>
    <hudson.tasks.BuildTrigger>
      <childProjects>JMeterExample</childProjects>
      <threshold>
        <name>FAILURE</name>
        <ordinal>2</ordinal>
        <color>RED</color>
      </threshold>
    </hudson.tasks.BuildTrigger>
    <hudson.plugins.emotional__hudson.EmotionalHudsonPublisher/>
    <net.hurstfrost.hudson.sounds.HudsonSoundsNotifier>
      <soundEvents>
        <net.hurstfrost.hudson.sounds.HudsonSoundsNotifier_-SoundEvent>
          <soundId>EXPLODE</soundId>
          <toResult>
            <name>FAILURE</name>
            <ordinal>2</ordinal>
            <color>RED</color>
          </toResult>
          <fromResults>
            <hudson.model.Result>
              <name>NOT_BUILT</name>
              <ordinal>3</ordinal>
              <color>NOTBUILT</color>
            </hudson.model.Result>
            <hudson.model.Result>
              <name>ABORTED</name>
              <ordinal>4</ordinal>
              <color>ABORTED</color>
            </hudson.model.Result>
            <hudson.model.Result>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
            </hudson.model.Result>
            <hudson.model.Result>
              <name>SUCCESS</name>
              <ordinal>0</ordinal>
              <color>BLUE</color>
            </hudson.model.Result>
            <hudson.model.Result>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
            </hudson.model.Result>
          </fromResults>
        </net.hurstfrost.hudson.sounds.HudsonSoundsNotifier_-SoundEvent>
      </soundEvents>
    </net.hurstfrost.hudson.sounds.HudsonSoundsNotifier>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper>
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>
