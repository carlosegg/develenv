<?xml version="1.0" encoding="UTF-8"?>
   <!--
      Licensed to the Apache Software Foundation (ASF) under one or more
      contributor license agreements. See the NOTICE file distributed with
      this work for additional information regarding copyright ownership.
      The ASF licenses this file to you under the Apache License, Version
      2.0 (the "License"); you may not use this file except in compliance
      with the License. You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0 Unless required by
      applicable law or agreed to in writing, software distributed under the
      License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
      CONDITIONS OF ANY KIND, either express or implied. See the License for
      the specific language governing permissions and limitations under the
      License.
   -->
   <!--
      | This is the configuration file for Maven. It can be specified at two
      levels: | | 1. User Level. This settings.xml file provides
      configuration for a single user, | and is normally provided in
      ${user.home}/.m2/settings.xml. | | NOTE: This location can be
      overridden with the CLI option: | | -s /path/to/user/settings.xml | |
      2. Global Level. This settings.xml file provides configuration for all
      Maven | users on a machine (assuming they're all using the same Maven
      | installation). It's normally provided in |
      ${maven.home}/conf/settings.xml. | | NOTE: This location can be
      overridden with the CLI option: | | -gs /path/to/global/settings.xml |
      | The sections in this sample file are intended to give you a running
      start at | getting the most out of your Maven installation. Where
      appropriate, the default | values (values used when the setting is not
      specified) are provided. | |
   -->
<settings xmlns="http://maven.apache.org/settings/1.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
   <!--
      localRepository | The path to the local repository maven will use to
      store artifacts. | | Default: ~/.m2/repository
      <localRepository>/path/to/local/repo</localRepository>
   -->
   ${maven.local.repository}
   <!--
      interactiveMode | This will determine whether maven prompts you when
      it needs input. If set to false, | maven will use a sensible default
      value, perhaps based on some other setting, for | the parameter in
      question. | | Default: true <interactiveMode>true</interactiveMode>
   -->
   <!--
      offline | Determines whether maven should attempt to connect to the
      network when executing a build. | This will have an effect on artifact
      downloads, artifact deployment, and others. | | Default: false
      <offline>false</offline>
   -->
   <!--
      pluginGroups | This is a list of additional group identifiers that
      will be searched when resolving plugins by their prefix, i.e. | when
      invoking a command line like "mvn prefix:goal". Maven will
      automatically add the group identifiers | "org.apache.maven.plugins"
      and "org.codehaus.mojo" if these are not already contained in the
      list. |
   -->
    <pluginGroups>
      <!--
         pluginGroup | Specifies a further group identifier to use for plugin
         lookup. <pluginGroup>com.your.plugins</pluginGroup>
      -->
    </pluginGroups>
   <!--
      proxies | This is a list of proxies which can be used on this machine
      to connect to the network. | Unless otherwise specified (by system
      property or command-line switch), the first proxy | specification in
      this list marked as active will be used. |
   -->
    <proxies>
      <!--
         proxy | Specification for one proxy, to be used in connecting to the
         network. | <proxy> <id>optional</id> <active>true</active>
         <protocol>http</protocol> <username>proxyuser</username>
         <password>proxypass</password> <host>proxy.host.net</host>
         <port>80</port>
         <nonProxyHosts>local.net|some.host.com</nonProxyHosts> </proxy>
      -->
    </proxies>
   <!--
      servers | This is a list of authentication profiles, keyed by the
      server-id used within the system. | Authentication profiles can be
      used whenever maven must make a connection to a remote server. |
   -->
    <servers>
        <server>
            <id>${developer.hudson.http}</id>
            <username>${administrator.id}</username>
            <password>{VmME/bHLxbEHAN9mHeVPJT6UrdmhnhU/Zsp9FlzS37g=}</password>
        </server>
        <!-- Versiones de snapshot de los componentes -->
        <server>
            <id>repo-snapshot</id>
            <username>deployment</username>
            <password>${nexus.deployment.password}</password>
        </server>
                <!-- Releases de los componentes -->
        <server>
            <id>repo-release</id>
            <username>deployment</username>
            <password>${nexus.deployment.password}</password>
        </server>
        <server>
            <id>repo-archetype-snapshot</id>
            <username>deployment</username>
            <password>${nexus.deployment.password}</password>
        </server>
                <!-- Releases de los componentes -->
        <server>
            <id>repo-archetype-release</id>
            <username>deployment</username>
            <password>${nexus.deployment.password}</password>
        </server>
      <!-- Repositorios de release de artifacts de terceros -->
        <server>
            <id>repo-third-party-snapshot</id>
            <username>deployment</username>
            <password>${nexus.deployment.password}</password>
        </server>
      <!-- Repositorios de release artifacts de terceros -->
        <server>
            <id>repo-third-party-release</id>
            <username>deployment</username>
            <password>${nexus.deployment.password}</password>
        </server>
                <!-- Sevidor donde se dejarÃ¡ la documentciÃ³n de los proyectos -->
        <server>
            <id>repo-site</id>
            <username>${PROJECT_USER}</username>
            <password>${password}</password>
        </server>
      <!--
         Servidores de aplicaciones utilizados para el desarrollo de los
         proyectos
      -->
        <server>
            <id>localhost</id>
            <username>admin</username>
            <password>admin</password>
        </server>
      <!--
         server | Specifies the authentication information to use when
         connecting to a particular server, identified by | a unique name
         within the system (referred to by the 'id' attribute below). | |
         NOTE: You should either specify username/password OR
         privateKey/passphrase, since these pairings are | used together. |
         <server> <id>deploymentRepo</id> <username>repouser</username>
         <password>repopwd</password> </server>
      -->
      <!--
         Another sample, using keys to authenticate. <server>
         <id>siteServer</id> <privateKey>/path/to/private/key</privateKey>
         <passphrase>optional; leave empty if not used.</passphrase> </server>
      -->
    </servers>
   <!--
      mirrors | This is a list of mirrors to be used in downloading
      artifacts from remote repositories. | | It works like this: a POM may
      declare a repository to use in resolving certain artifacts. | However,
      this repository may have problems with heavy traffic at times, so
      people have mirrored | it to several places. | | That repository
      definition will have a unique id, so we can create a mirror reference
      for that | repository, to be used as an alternate download site. The
      mirror site will be the preferred | server for that repository. |
   -->
   ${maven.mirrors}
   <!--
      profiles | This is a list of profiles which can be activated in a
      variety of ways, and which can modify | the build process. Profiles
      provided in the settings.xml are intended to provide local machine- |
      specific paths and repository locations which allow the build to work
      in the local environment. | | For example, if you have an integration
      testing plugin - like cactus - that needs to know where | your Tomcat
      instance is installed, you can provide a variable here such that the
      variable is | dereferenced during the build process to configure the
      cactus plugin. | | As noted above, profiles can be activated in a
      variety of ways. One way - the activeProfiles | section of this
      document (settings.xml) - will be discussed later. Another way
      essentially | relies on the detection of a system property, either
      matching a particular value for the property, | or merely testing its
      existence. Profiles can also be activated by JDK version prefix, where
      a | value of '1.4' might activate a profile when the build is executed
      on a JDK version of '1.4.2_07'. | Finally, the list of active profiles
      can be specified directly from the command line. | | NOTE: For
      profiles defined in the settings.xml, you are restricted to specifying
      only artifact | repositories, plugin repositories, and free-form
      properties to be used as configuration | variables for plugins in the
      POM. | |
   -->
    <profiles>
        <profile>
            <id>companyProfile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <repositories>
                <repository>
                    <id>public-snapshots</id>
                    <url>${nexus.url}/content/groups/public-snapshots
                    </url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                    </snapshots>
                </repository>
                <repository>
                    <id>central</id>
                    <url>http://repo1.maven.org/maven2
                    </url>
                    <releases>
                    </releases>
                    <snapshots>
                    </snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>public</id>
                    <url>${nexus.url}/content/groups/public
                    </url>
                    <releases>
                    </releases>
                    <snapshots>
                    </snapshots>
                </pluginRepository>
                <pluginRepository>
                    <id>public-snapshots</id>
                    <url>${nexus.url}/content/groups/public-snapshots
                    </url>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                    <snapshots>
                    </snapshots>
                </pluginRepository>
                                <pluginRepository>
                    <id>central</id>
                    <url>http://repo1.maven.org/maven2
                    </url>
                    <releases>
                    </releases>
                    <snapshots>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
            <properties>
                <!-- Datos de la organización-->
                <companyName>${companyName}
                </companyName>
                <companyUrl>${companyUrl}</companyUrl>
                <mavenManagerBaseUrl>${nexus.url}</mavenManagerBaseUrl>
                            <!-- Repositorio de snapshot -->
                <repoMavenSnapshotId>repo-snapshot
                </repoMavenSnapshotId>
                <repoMavenSnapshotName>repo-snapshot
                </repoMavenSnapshotName>
                <repoMavenSnapshotUrl>
               ${mavenManagerBaseUrl}/content/repositories/snapshots/
                </repoMavenSnapshotUrl>
                         <!-- Repositorio de release -->
                <repoMavenId>repo-release</repoMavenId>
                <repoMavenName>repo-release</repoMavenName>
                <repoMavenUrl>
               ${mavenManagerBaseUrl}/content/repositories/releases/
                </repoMavenUrl>
                         <!-- Repositorio de snapshot para componentes de terceros -->
                <repoMavenThirdPartySnapshotId>repo-third-party-snapshot
                </repoMavenThirdPartySnapshotId>
                <repoMavenThirdPartySnapshotName>repo-third-party-snapshot
                </repoMavenThirdPartySnapshotName>
                <repoMavenThirdPartySnapshotUrl>
               ${mavenManagerBaseUrl}/content/repositories/thirdparty-snapshot/
                </repoMavenThirdPartySnapshotUrl>
                         <!-- Repositorio de release para componentes de terceros-->
                <repoMavenThirdPartyId>repo-third-party-release
                </repoMavenThirdPartyId>
                <repoMavenThirdPartyName>repo-third-party-release
                </repoMavenThirdPartyName>
                <repoMavenThirdPartyUrl>
               ${mavenManagerBaseUrl}/content/repositories/thirdparty/
                </repoMavenThirdPartyUrl>
                        <!-- Repositorio de snapshot para arquetipos -->
                <repoMavenArchetypeSnapshotId>repo-archetype-snapshot
                </repoMavenArchetypeSnapshotId>
                <repoMavenArchetypeSnapshotName>repo-archetype-snapshot
                </repoMavenArchetypeSnapshotName>
                <repoMavenArchetypeSnapshotUrl>
               ${mavenManagerBaseUrl}/content/repositories/archetype-snapshots/
                </repoMavenArchetypeSnapshotUrl>
                         <!-- Repositorio de release para arquetipos-->
                <repoMavenArchetypeId>repo-archetype-release
                </repoMavenArchetypeId>
                <repoMavenArchetypeName>repo-archetype-release
                </repoMavenArchetypeName>
                <repoMavenArchetypeUrl>
               ${mavenManagerBaseUrl}/content/repositories/archetype-releases/
                </repoMavenArchetypeUrl>
                <repoSiteId>repo-site</repoSiteId>
                <repoSiteName>repo-site</repoSiteName>
                <repoSiteUrl>${maven.site.scp}</repoSiteUrl>
                <repoPublicSiteUrl>${maven.site.url}</repoPublicSiteUrl>
                        <!-- Repositorio de integración continua -->
                <continousIntegrationSystem>Hudson</continousIntegrationSystem>
                <continousIntegrationSystemUrl>${developer.hudson.url}
                </continousIntegrationSystemUrl>
                <smtpHost>${smtp.host}</smtpHost>
                        <!-- Opciones compilación -->
                <compilerInfoDebug>true</compilerInfoDebug>
                <compilerOptimize>false</compilerOptimize>
                <showWarnings>false</showWarnings>
                <showDeprecation>false</showDeprecation>
                <verbose>false</verbose>
            </properties>
        </profile>
                <!-- Propiedades particulares de cada usuario -->
        <profile>
            <id>personalProfile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                          <!-- Repositorio de svn -->
                <scmUrl>${scm.url.connection}
                </scmUrl>
                <scmConnection>
               scm:svn:${scm.url.connection}
                </scmConnection>
                <scmDeveloperConnection>
               scm:svn:${scm.url.developer.connection}
                </scmDeveloperConnection>
                <scmUser>${scm.user}</scmUser>
                <scmPassword>${scm.password}</scmPassword> <!-- [MODIFICAR]  -->
                          <!-- Workspace -->
                <scmCheckoutDirectory>${PROJECT_HOME}/dev/workspace <!-- [MODIFICAR]  -->
                </scmCheckoutDirectory>
                <!-- User Properties -->
                <userId>${userId}</userId> <!-- [MODIFICAR]  -->
                <userName>${userName}</userName> <!-- [MODIFICAR]  -->
                <userMail>${userMail}</userMail>  <!-- [MODIFICAR]  -->
                <userRole>${userRole}</userRole> <!-- [MODIFICAR]  -->
                <userOrganization>${userOrganization}</userOrganization> <!-- [MODIFICAR]  -->
            </properties>
        </profile>
        <!-- Propiedades de los arquetipos tipo -->
        <profile>
            <id>archetypesProfile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <groupIdArchetypes>com.softwaresano.archetypes
                </groupIdArchetypes>
                <standaloneArchetype>standalone-archetype
                </standaloneArchetype>
            </properties>
        </profile>
        <profile>
            <id>sonar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- EXAMPLE FOR MYSQL -->
                <sonar.jdbc.url><![CDATA[${sonar.jdbc.url}]]>
                </sonar.jdbc.url>
                <sonar.jdbc.driver>com.mysql.jdbc.Driver
                </sonar.jdbc.driver>
                <sonar.jdbc.username>sonar</sonar.jdbc.username>
                <sonar.jdbc.password>${sonar.jdbc.password}</sonar.jdbc.password>
                <!-- SERVER ON A REMOTE HOST -->
                <sonar.host.url>${sonar.url}
                </sonar.host.url>
            </properties>
        </profile>
    </profiles>
   <!--
      activeProfiles | List of profiles that are active for all builds. |
      <activeProfiles> <activeProfile>alwaysActiveProfile</activeProfile>
      <activeProfile>anotherAlwaysActiveProfile</activeProfile>
      </activeProfiles>
   -->
</settings>
