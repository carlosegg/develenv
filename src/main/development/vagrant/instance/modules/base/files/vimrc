syntax on
" Highlight trailing whitespaces and tabs (python)
highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
highlight Tab ctermbg=darkgreen guibg=darkgreen
autocmd Syntax * syn match ExtraWhitespace /\s\+$/
autocmd Syntax * syn match Tab /\t\+/

" sudo write dammit!
cmap w!! %!sudo tee > /dev/null %

" to fold and unfold code
"set foldmethod=indent
"set foldlevel=99

set ai "Auto indent
" set si "Smart indet
set wrap "Wrap lines

set ts=4 "4 space tab
set expandtab "tabs per spaces

" Warn if the line is too long
" set colorcolumn=80

set number "show line numbers
set ruler "show statusbar with line,column

"set showmatch "highlight the pair og brackes/parenthesis
"set mat=2 "How many tenths of a second to blink
set nocompatible "ignore old vim restrictions
set hid "Change buffer - without saving
set ignorecase "ignore case when searching
set smartcase
set hlsearch "Highlight search things
set incsearch "Make search act like search in modern browsers
set magic "Set magic on, for regular expressions

" No sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500


""""""""""""""""""""""""""""""
" => Statusline
""""""""""""""""""""""""""""""
" Always hide the statusline
set laststatus=2

" Format the statusline
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{CurDir()}%h\ \ \ Line:\ %l/%L:%c


function! CurDir()
    let curdir = substitute(getcwd(), '/home/cascara/', "~/", "g")
    return curdir
endfunction

function! HasPaste()
    if &paste
        return 'PASTE MODE  '
    else
        return ''
    endif
endfunction

" Provide a simple way to switch buffers
map <c-left> :bp<CR>
map <c-right> :bn<CR>
" map <c-left> :tabprevious<CR>
" map <c-right> :tabnext<CR>
